{"data":{"site":{"siteMetadata":{"title":"Tomek's blog"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"In continuation of the previous post dedicated to server-side error handling, in this post let’s focus on error handling in a react…","fields":{"slug":"/error-handling-with-apollo-client/"},"frontmatter":{"date":"February 08, 2020","title":"Error handling with Apollo Client","description":"How to handle errors in a React application with Apollo Client in Typescript - GraphQL and non-GraphQL errors, in imperative and declarative way, globally and on the component level. Also how to achieve type safety of errors by sharing error types between the server and client sides."}}},{"node":{"excerpt":"GraphQL is recently gaining popularity and many organizations are evaluating how they can benefit from GraphQL capabilities in their systems…","fields":{"slug":"/error-handling-with-apollo-server/"},"frontmatter":{"date":"February 01, 2020","title":"Error handling with Apollo Server","description":"How to handle errors with Apollo Server using Typescript, translating system-wide, service-specific and unexpected errors into Apollo's errors. How to transition from REST-based to GraphQL-based API without reimplementation of the current system below the controllers layer."}}}]}}}