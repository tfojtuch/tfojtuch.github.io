{"componentChunkName":"component---src-pages-index-tsx","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Tomek's blog"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"About: handling errors in a React application with Apollo Client; GraphQL and non-GraphQL errors; imperatively and declaratively; globally…","fields":{"slug":"/error-handling-with-apollo-client/"},"frontmatter":{"date":"February 08, 2020","title":"Error handling with Apollo Client","description":"handling errors in a React application with Apollo Client; GraphQL and non-GraphQL errors; imperatively and declaratively; globally and on the component level; type safety with Typescript by sharing error types between the server and client sides;"}}},{"node":{"excerpt":"About: handling errors with Apollo Server; translating system-wide, service-specific and unexpected errors into Apollo’s errors; without…","fields":{"slug":"/error-handling-with-apollo-server/"},"frontmatter":{"date":"February 01, 2020","title":"Error handling with Apollo Server","description":"handling errors with Apollo Server; translating system-wide, service-specific and unexpected errors into Apollo's errors; without reimplementation of a current system while transitioning from REST to GraphQL; type-safe with Typescript;"}}}]}},"pageContext":{}}}